.linux: &linux
  image: docker.gitlab.gwdg.de/jlebert/emsim

.gcc: &gcc
  <<: [*linux]
  image: docker.gitlab.gwdg.de/jlebert/emsim/gcc
  cache:
    key: docker-gcc
    paths:
      - .ccache

.clang: &clang
  <<: [*linux]
  image: docker.gitlab.gwdg.de/jlebert/emsim/clang
  cache:
    key: docker-clang
    paths:
      - .ccache

.osx: &osx
  tags:
    - osx

.windows: &windows
  tags:
    - windows

.xcode_generator: &xcode_generator
  CMAKE_GENERATOR: 'Xcode'

.vs_generator: &vs_generator
  CMAKE_GENERATOR: 'Visual Studio 16 2019'
  CMAKE_GENERATOR_PLATFORM: 'x64'

.build_make: &build_make
  script:
    - JOB_NAME=( $CI_JOB_NAME )
    - export BUILD_TYPE=${JOB_NAME[@]:(-1)}
    - echo "BUILD_TYPE=${BUILD_TYPE}"
    - echo "CMAKE_PARAMS=${CMAKE_PARAMS}"
    - cmake -H. -Bbuild -G "Unix Makefiles" -DCMAKE_BUILD_TYPE=${BUILD_TYPE} ${CMAKE_PARAMS[@]} -Wdev
    - cd build
    - cmake --build . --parallel 4
    - |
      if [ "$BUILD_APPIMAGE" = true ]
      then
        curl -L -o linuxdeploy-x86_64.AppImage https://github.com/linuxdeploy/linuxdeploy/releases/download/continuous/linuxdeploy-x86_64.AppImage
        chmod +x linuxdeploy-x86_64.AppImage
        OUTPUT="quickVidViewer.AppImage" ./linuxdeploy-x86_64.AppImage --appimage-extract-and-run -e quickVidViewer -d ../vendor/quickVidViewer.desktop -i ../vendor/quickVidViewer.png --appdir AppDir --output appimage
      fi

  dependencies: []

.build_config_generator: &build_config_generator
  script:
    - JOB_NAME=( $CI_JOB_NAME )
    - export BUILD_TYPE=${JOB_NAME[@]:(-1)}
    - echo "BUILD_TYPE=${BUILD_TYPE}"
    - echo "CMAKE_PARAMS=${CMAKE_PARAMS}"
    - cmake -H. -Bbuild -G "${CMAKE_GENERATOR}" -DCMAKE_GENERATOR_PLATFORM="${CMAKE_GENERATOR_PLATFORM}" ${CMAKE_PARAMS[@]} -Wdev
    - cd build
    - cmake --build . --config ${BUILD_TYPE} --parallel 4
  dependencies: []



.docker_build: &docker_build
  <<: [*build_make]
  before_script:
    - export CCACHE_DIR=`pwd`/.ccache
    - export CCACHE_SLOPPINESS="file_macro,pch_defines,time_macros"
    - ccache -s

gcc Release:
  <<: [*gcc, *docker_build]
  variables:
    CMAKE_PARAMS: -DSTATIC_GCC=ON
    BUILD_APPIMAGE: "true"
  artifacts:
    paths:
      - build/quickVidViewer
      - build/quickVidViewer.AppImage
    expire_in: 1 day

gcc Debug:
  <<: [*gcc, *docker_build]

clang Release:
  <<: [*clang, *docker_build]

osx Release:
  <<: [*osx, *build_config_generator]
  variables:
    <<: *xcode_generator
  artifacts:
    paths:
      - build/Release/quickVidViewer
    expire_in: 1 day

windows Release:
  <<: [*windows, *build_config_generator]
  variables:
    <<: *vs_generator
  artifacts:
    paths:
      - build/Release/quickVidViewer.exe
    expire_in: 1 day